# Optional: RBAC configuration if your cluster requires it
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cuda-ipc-sa
  namespace: default
---
# Optional: PodSecurityPolicy (if your cluster uses PSP)
# Note: PSP is deprecated in Kubernetes 1.21+ in favor of Pod Security Standards
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: cuda-ipc-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  hostIPC: true  # Required for CUDA IPC
  hostNetwork: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  allowedCapabilities:
  - 'IPC_LOCK'  # Required for CUDA IPC
  volumes:
  - 'emptyDir'
  - 'secret'
  - 'configMap'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cuda-ipc-psp-user
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames: ['cuda-ipc-psp']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cuda-ipc-psp-binding
roleRef:
  kind: ClusterRole
  name: cuda-ipc-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: cuda-ipc-sa
  namespace: default